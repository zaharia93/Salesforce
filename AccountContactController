public class AccountContactController {
    
    public Account account { get; set; }
    public List<Contact> contacts { get; set; }
    public String contactName { get; set; }
    private ApexPages.StandardController stdController;
    
    public AccountContactController(ApexPages.StandardController stdController) {
        this.stdController = stdController;
        account = (Account)stdController.getRecord();
        contacts = new List<Contact>();
    }
    
    public void searchContacts() {
        contacts = [SELECT Id, Name, Title, Phone, Is_Primary_Contact__c 
                    FROM Contact 
                    WHERE AccountId = :account.Id 
                    AND Name LIKE :contactName + '%'];
    }
    
    public PageReference confirmSetPrimaryContact() {
        String selectedContactId = ApexPages.currentPage().getParameters().get('selectedContactId');
        if (String.isNotBlank(selectedContactId)) {
            for (Contact c : contacts) {
                if (c.Id == selectedContactId) {
                    c.Is_Primary_Contact__c = true;
                } else {
                    c.Is_Primary_Contact__c = false;
                }
            }
            update contacts;
        }
        return null;
    }
    
    public void setPrimaryContact() {
        Contact primaryContact = [SELECT Id 
                                  FROM Contact 
                                  WHERE AccountId = :account.Id 
                                  AND Is_Primary_Contact__c = true 
                                  LIMIT 1];
        if (primaryContact != null) {
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.WARNING, 'A primary contact already exists. Please remove the primary flag from the existing primary contact.'));
        } else {
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.INFO, 'Click "Set as Primary" next to a contact to set it as the primary contact.'));
        }
    }
    
    public PageReference save() {
        try {if (account != null)
            update account;
            return stdController.view();
        } catch (Exception e) {
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.WARNING, e.getMessage()));
            return null;
        }
    }
    
    public PageReference cancel() {
        stdController.cancel();
        return null;
    }
}
